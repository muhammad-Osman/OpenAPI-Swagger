openapi: 3.0.3
info:
  title: Products APIs Definition
  description: |
     Using this OpenAPI specification, any consumer can understand the APIs that are exposed by Usman shop
  termsOfService: https://google.com
  contact:
    name: API Support
    url: https://google.com
    email: m.osman5411@gmail.com
  license:
    name: usman shop licence
    url: test
  version: 0.0.1
servers:
  - url: https://development.com/v1
    description: Development server
paths:
  /categories:
    get:
      summary: List all catgories
      description: Returns the list of categories supported by EazyShop
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses:
        '200':
          description: A list of catgories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    categoryId:
                      type: integer
                    name:
                      type: string
  /categories/{categoryId}:
    get:
      summary: Return category details
      description: Returns the category details from EazyShop
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 102
      responses:
        '200':
          description: Return category details
          content:
            application/json:
              schema:
                type: object
                properties:
                  categoryId:
                    type: integer
                  name:
                    type: string
  /products:
    get:
      summary: List all products
      description: |
        Returns the list of products supported by EazyShop
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                    categoryName:
                      type: string
                    quantity:
                      type: integer
  /products/{productId}:
    get:
      summary: Return product details
      description: |
        Returns the product details from  EazyShop
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses:
        '200':
          description: Return product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  productId:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  categoryName:
                    type: string
                  quantity:
                    type: integer
  /orders:
    post: 
      summary: Create order
      description: |
        place order for shipping
      requestBody: 
        content: 
          application/json: 
            schema:
              type: object
              properties: 
                products:
                  type: array
                  items: 
                    type: object
                    properties: 
                      productId: 
                        type: integer
                      name: 
                        type: string
                      price:
                        type: number
                      quanity:
                        type: integer
                address: 
                  type: object
                  properties: 
                    addressLine: 
                      type: string
                    city: 
                      type: string
                    state: 
                      type: string
                    zipCode:
                      type: string
      responses: 
        '201':
          description: order created successfully
          content: 
            application/json: 
              schema: 
                type: object
                properties: 
                  orderId: 
                    type: integer
    put: 
      summary: update order
      description: using this api you can update order
      responses: 
        '200':
          description: your order update result
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: integer
    delete: 
      summary: delete order
      description: you can delete order using api
      parameters: 
        - name: orderId
          in: query
          required: true
          schema:
            type: integer
      responses: 
        '200':
          description: order deleted successfully
    get: 
      summary: get single product
      responses: 
        '200':
          description: Resturn single products detail
          content: 
            application/json: 
              schema:
                type: object
                properties:
                  productId:
                    type: integer
                  name: 
                    type: string
                  quantity:
                    type: integer
                  price:
                    type: number
                  images:
                    type: array
                    items:
                      type: string